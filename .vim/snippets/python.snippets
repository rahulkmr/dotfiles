snippet #!
	#!/usr/bin/env python
snippet imp
	import ${1:module}
snippet wh
	while ${1:condition}:
snippet for
	for ${1:needle} in ${2}:
# New Class
snippet cl
	class ${1:Name}(${2:object}):
	    """
	    ${3}
	    """
	    def __init__(self, ):
# New Function
snippet def
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
	    """
	    ${3}
	    """
snippet deff
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
	    ${3}
# New Method
snippet defs
	def ${1:mname}(self, ):
# New Property
snippet property
	def ${1}():
	    doc = "${2}"
	    def fget(self):
	        ${3:return self._$1}
	    def fset(self, value):
	        ${4:self._$1 = value}
# Lambda
snippet ld
	${1:var} = lambda ${2:}: ${3}
snippet lam
	lambda ${2}: ${3}
snippet .
	self.
snippet try Try/Except
	try:
	    ${1}
	except ${2:Exception}, ${3:e}:
	    ${4}
snippet try Try/Except/Else
	try:
	    ${1:pass}
	except ${2:Exception}, ${3:e}:
	    ${4:raise $3}
	else:
	    ${5:pass}
snippet try Try/Except/Finally
	try:
	    ${1}
	except ${2:Exception}, ${3:e}:
	    ${4}
	finally:
	    ${5}
snippet try Try/Except/Else/Finally
	try:
	    ${1}
	except ${2:Exception}, ${3:e}:
	    ${4}
	else:
	    ${5}
	finally:
	    ${6}
# if __name__ == '__main__':
snippet ifmain
	if __name__ == '__main__':
	    ${1:main()}
# __magic__
snippet _
	def __${1}__(self, ${2})
snippet _i
	def __init__(self, ${1}):
snippet sup
	super(${1}, self).
snippet ml
	"""
	${1}
	"""
snippet sml
	'''
	${1}
	'''
