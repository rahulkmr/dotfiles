# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' max-errors 3
zstyle ':completion:*' original true
zstyle ':completion:*' use-compctl false
zstyle :compinstall filename '/home/rahul/.zshrc'

autoload -Uz compinit promptinit
compinit
promptinit
autoload edit-command-line
zle -N edit-command-line
bindkey '^Xe' edit-command-line
# End of lines added by compinstall
setopt completeinword
setopt inc_append_history
setopt share_history          # share history between open shells
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_expire_dups_first # expire duped history first
setopt promptsubst
setopt chase_dots
setopt chase_links
setopt noclobber
setopt list_types             # show file types in list
setopt correct correct_all
setopt ignoreeof

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Aliases 
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'
alias clj="rlwrap -r java clojure.main"
alias x=exit
alias urxvt="urxvt  -sr -g '80x30' -fn 'xft:DejaVu Sans Mono-12:dpi=75'"
alias xterm="xterm -g '80x30' -fa 'xft:DejaVu Sans Mono-12:dpi=75'"
#alias screen='TERM=xterm-256color screen'
# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias rm='rm -i'
alias mv='nocorrect mv -i'
alias cp='nocorrect cp -i'
alias md='mkdir -p'
alias em='emacs -nw'
alias es='emacs --daemon'
alias ec='emacsclient -t'
# Exports
export PS1="$(print '%{\e[1;32m%}%n@%m%{\e[0m%}'): $(print '%{\e[1;34m%}%~%{\e[0m%}') $(print '%{\e[1;31m%}%?%{\e[0m%}') \$(git_info)
\$(prompt_char) $ "
export PS2="$(print '%{\e[0;34m%}>%{\e[0m%}')"

export EDITOR=vim

export PYTHONDIRS=$(/usr/bin/env python -c 'import sys; sys.stdout.write(",".join(sys.path))')
PYTHONDIRS=$(echo $PYTHONDIRS | sed -e 's;\\;/;g')


# Functions
#
# format titles for screen and rxvt
function title() {
    # escape '%' chars in $1, make nonprintables visible
    current=${(V)1//\%/\%\%}
    # Truncate command, and join lines.
    current=$(print -Pn "%40>..>$current" | tr -d "\n")
    host_and_user=$(print -Pn "%40>..>$2")
    working_dir=$(print -Pn "%40<..<$3")
    case $TERM in
    screen*)
        print -Pn "\ek$current:$host_and_user $working_dir\e\\"
        ;;
    xterm*|rxvt*|urxvt*)
        print -Pn "\e]0;$current:$host_and_user $working_dir\a"
        ;;
    esac
}

# precmd is called just before the prompt is printed
function precmd() {
    if [ -z "${ST}" ]; then
        title "zsh" "%n@%m" "%~"
    else
        title "$ST" "%n@%m" "%~"
    fi
}

## preexec is called just before any command line is executed
#function preexec() {
    #if [ -z "${ST}" ]; then
        #title "$1" "%n@%m" "%~"
    #else
        #title "$ST" "%n@%m" "%~"
    #fi
#}

function git_info () {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(git::\1)/'
}

function virtualenv_info {
    [ $VIRTUAL_ENV ] && echo '('`basename $VIRTUAL_ENV`') '
}

# PS1 and PS2
function prompt_char {
    git branch >/dev/null 2>/dev/null && print '∞' && return
    hg root >/dev/null 2>/dev/null && print "☿($(hg branch))" && return
    print 'o'
}


function ni() { ST="${1}"; }
function nr() { unset ST; }

function glb() { git rev-parse --abbrev-ref HEAD }
function grb() { git rev-parse --symbolic-full-name --abbrev-ref HEAD }


## General configuration

# Golang configuration
# gc
prefixes=(5 6 8)
for p in $prefixes; do
	compctl -g "*.${p}" ${p}l
	compctl -g "*.go" ${p}g
done

# standard go tools
compctl -g "*.go" gofmt

# gccgo
compctl -g "*.go" gccgo


export PS1="$(print '%{\e[1;30m%}%n@%m%{\e[0m%}'): $(print '%{\e[1;34m%}%~%{\e[0m%}') $(print '%{\e[1;31m%}%?%{\e[0m%}') \$(git_info)
\$(prompt_char) $ "
export PS2="$(print '%{\e[0;33m%}>%{\e[0m%}')"



export ORACLE_HOME=/usr/lib/oracle/xe/app/oracle/product/10.2.0/server
export ORACLE_SID=XE

export GOPATH=$HOME/musings/go
export WORKON_HOME=~/venvs
source /usr/local/bin/virtualenvwrapper.sh

export PATH=$HOME/bin:$HOME/scala/bin:$GOPATH/bin:$HOME/.rvm/bin:$PATH
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
export PIP_DOWNLOAD_CACHE=$HOME/.pip-download-cache
export TERM=xterm-256color

### Added by the Heroku Toolbelt
export PATH="$PATH:/usr/local/heroku/bin"

# OPAM configuration
. /home/rahul/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

PERL_MB_OPT="--install_base \"/home/rahul/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/rahul/perl5"; export PERL_MM_OPT;
